name: build

on:
  push:
    branches: [ master ]
    tags: [ v* ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build image
        run: |
          docker-compose -f ci/docker-compose.ci.yml build

      - name: Run django tests
        run: |
          docker-compose -f ci/docker-compose.ci.yml up --detach
          docker-compose -f ci/docker-compose.ci.yml exec -T web coverage run manage.py test -v 2
          docker-compose -f ci/docker-compose.ci.yml exec -T web coverage html
      
      - name: Upload test results and coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

# Allow one concurrent deployment

  # Single deploy job since we're just deploying
  deploy-coverage:
    needs: build-and-test
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download test results and coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './coverage'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1


  build-and-push-image:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./src/web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
